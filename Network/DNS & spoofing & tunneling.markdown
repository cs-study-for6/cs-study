# DNS
DNS(Domain Name System)이란?
IP 주소 대신 도메인 이름(DN)을 사용하여 IP주소로 접속하고자 할때 사용되는 시스템이다.

> DN(도메인 이름) </br>
> 웹 사이트 주소를 http://142.250.207.36/ 처럼 IP 주소로만 작성해서 이용한다면 기억하기 매우 어려울 것이다. 그래서 우리는 https://www.google.com/와 같이 도메인 이름을 사용한다.

</br>

DNS는 전세계 적으로 약속된 규칙을 공유한다.

DNS는 Domain Name Space, Name Server, Resolver의 구성요소를 가진다.

---
##  Domain Name Space
도메인은  `.`으로 연결한 hierarchy 구조를 갖고 있다. 즉 최상위 루트가 DNS인 트리 구조이다.

1. TLD(Top Level Domain)
    -    `.com` 과 같은 일반 도메인과 `.kr`과 같은 국가 코드 도메인

2. SLD(Second Level Domain)
    - 조직의 속성을 구분 </br> `co` 영리기업, `go` 정부기관, `ac` 대학 같은 도메인
    - 조직이나 서비스의 이름</br> : `google`과 같은 도메인으로, 사용자가 원하는 문자열을 사용
3. HOST(=sub Domain)
    - `www`, `m`, `store` 과 같이 도메인에 따라 사이트의 구성이 달라지는 것

---
## Name Server
도메인 네임 스페이스의 트리 구조에 대한 정보를 가지고 있는 서버를 Name Server라고 한다.

주로 데이터 베이스 역할을 한다.

도메인 네임 스메이스 트리 구조 같이 서버가 구성되어있다.
    
    1. 루트 네임 서버
        - ICANN(국제 인터넷 주소 관리기구)가 직접 관리하는 서버, 전 세계 13개의 루트 네임 서버가 구축되어 있다.
        - TLD 네임 서버의 IP 주소가 등록되어 있다

    2. TLD 네임 서버
        - 도메인 등록기관이 관리하는 서버
        - Authoritative 네임 서버의 IP주소가 등록되어 있다.

    3. Authoritative 네임 서버(SLD 네임서버)
        - 실제 도메인과 IP 주소의 관계를 기록, 저장 ,변경 하는 권한을 가진 서버
        - 일반적으로 도메인/호스팅 업체의 네임서버를 말한다.

    4. Non-Authoritative 네임서버(=resolver 서버, recursive 서버, recursor)
        - 도메인 이름과 IP 주소가 매핑되어 있지 않고 질의를 통해 IP 주소를 알아내거나 캐시한다.
        - ISP가 제공하는 DNS 서버를 말하며 일반 가정의 경우 이 서버를 사용한다.

---

## Resolver
웹 브라우저 같은 DNS 클라이언트의 요청을 네임 서버로 전달하고 네임 서버로 부터 정보(도메인 이름 & ip 주소)를 받아 클라이언트에게 제공하는 기능을 수행한다.

하나의 네임 서버에게 DNS 요청을 전달하고 해당 서버에 정보가 없으면 다른 네임서버에게 요청을 보내 받아온다.


----

# DNS 동작 원리
1. 사용자가 브라우저로 웹사이트에 접속
2. 사용자의 컴퓨터는 도메인 이름을 가지고 로컬 DNS 캐시를 확인 로컬 DNS 캐시에 해당 도메인 이름에 대한 IP 주소가 캐시되어 있다면 바로 IP주소를 반환
3. 로컬 DNS 캐시에 해당하는 도메인 이름에 대한 IP 주소가 없다면 DNS 질의 시작
4. 사용자는 먼저 루트 DNS 서버의 IP 주소를 알아내기 위해, 사용자의 컴퓨터에 미리 설정되어 있는 최상위 DNS 서버의 IP 주소를 참조하여 루트 DNS 서버의 IP 주소를 획득
5. 사용자는 루트 DNS 서버에 질의를 보내어, 해당 도메인 이름을 관리하는 TLD DNS 서버의 IP 주소를 얻는다
6. 사용자는 TLD DNS 서버에 질의를 보내어 ,해당 도메인 이름을 관리하는 Authoritative DNS 서버의 IP 주소를 획득
7. 사용자는 Authoritative DNS 서버에 질의를 보내어, 해당 도메인 이름에 대한 IP 주소를 획득
8. 획득한 IP 주소를 캐시에 저장하고, 이를 브라우저에 반환하여 해당 도메인 이름에 대한 웹페이지를 표시

-----
# Tunneling protocol(터널링 프로토콜)
실제로 여러 홉을 거친 후 도착할 수 있는 목적지를 마치 다른 홉에 있는 것처럼 보이게하는 기술.

출발지와 목적지에서만 사용하고 중간에서는 사용하지 않는 프로토콜을 전송하여 양측간 통신이 가능하게 한다.


> 캡슐화 : </br>
    호스트와 호스트 사이의 통신이 어떤 프로토콜을 사용하든 터널이 구성되면 Original Packect은 캡슐화 되기 때문에 내용물이 중요하지 않게 된다.</br>
    캡슐화 후 전송된 목적지에서 디캡슐화하는 전체의 과정이 터널링이다.

----
# Spoofing
Mac, Ip, port등 네트워크 통신과 관련된 모든것을 대상으로 공격자가 자신을 공격 대상에게 노출시키지 않고 제 3의 사용자인것 처럼하는 공격이다.

스푸핑 공격은 주로 사용자 간의 통신 트래픽을 중간에서 몰래 가로채 수집하거나 조작하는 중간자 공격 또는 서로 다른 많은 주소를 조작하여 대량의 트래픽을 특정 시스템에 한꺼번에 발생시키는 Dos 공격 등에 사용된다.

## ARP 스푸핑
- 공격 원리
    - ARP(Address Resolution Protocol)은 호스트의 IP주소를 랜 카드의 하드웨어 주소(MAC 주소)로 변경하는 프로토콜이다
    - 사용자 시스템이 ARP Reply 메시지를 수신할 때마다 자신의 ARP Request 메시지 송신 여부와 관계없이 그리고 ARP Reply 메시지의 송신자에 대한 인증 과정 없이 자신의 ARP 테이블을 갱신하는 ARP 프로토콜의 취약점을 이용한다.
    - 공격자는 주기적으로 ARP 스푸핑 공격을 수행하며 ARP 캐시 테이블 공격 정보를 계속 유지한다.
    - 이와 같이 ARP 캐시 테이블의 내용을 몰래 변경하는 작업을 ARP 캐시 포이즈닝(ARP Cache Poisoning)이라 한다.
- 보안 대책
    >동일 네트워크 내의 시스템들에 대한 ARP 캐시 테이블은 ARP reply 메시지와 관계 없이 관리자가 직접 정적으로 작성하므로써, ARP 스푸핑 공격이 성립되지 않게 한다
## IP 스푸핑
- 공격 원리
    - 공격자가 자신의 IP 주소가 아닌 신뢰 관계를 가진 시스템의 주소로 위장하여 공격 대상 서버로 부터 정보를 가로채는 방식이다
    - 신뢰 관계에 있는 IP로 위장한 후 rlogin등을 이용하여 공객 대상 서버에 접속하여 백도어 등을 설치하여 공격 경로를 확보한다.
- 보안 대책
    - 외부에서 들어온 패킷 중에서 출발지 IP 주소에 내부방 IP 주소를 가지고 있는 패킷을 라우터 등에서 패킷 필터링을 사용하여 막아낼 수 있다.
    - 가장좋은 것은 트러스트를 사용하지 않는것이고 사용해야하는 경우에는 트러스트된  시스템의 MAC 주소를 정적으로 지정한다
    - IP주소 인증 기능이 보안된 프로토콜(IPSec)을 사용한다.

## DNS 스푸핑
- 공격 원리
    - DNS 스푸핑은 실제 DNS 서버보다 빨리 공격 대상에게 DNS Response 패킷을 보내 공격 대상이 잘못된 IP 주소로 웹 접속을 하도록 유도하는 공격이다
    - DNS 패킷은 UDP 패킷이므로 세션이 존재하지 않아 먼저 도착한 패킷을 신뢰하며, 다음에 도착한 정보는 버린다.

- 보안 대책 
    - 사이트에 접속했을 때 MAC처럼 캐시에 도메인 이름에 대한 IP 주소가 저장되엇다가 다시 접속 했을 때 DNS Query를 보내지 않고 캐시에서 읽어 드린다.
    - 그 후 Hosts 파일을 통해 도메인 이름에 대한 IP 주소를 해석하기 때문에 중요한 사이트의 IP 주소를 확인해 적어두면, 그 파일에 있는 사이트에 대해서는 DNS 스푸핑 공격을 당하지 않는다.
 


--------

## QnA

Q1. DNS동작원리 중, 로컬 DNS 캐시이 무엇인지, 도메인 이름에 대한 IP주소가 어떻게 캐시되는지 궁금합니다.

A. DNS 캐시 : 모든 운영체제에서 DNS 요청속도를 빠르게 높이는데 사용되는 것으로, 브라우저가 방문한 웹사이트의 사본을 보관 했다가 다음 방문시 사이트를 빠르게 열 수 있도록 하는 방식과 유사하다.
DNS 서버가 도메인 이름과 매칭된 IP주소를 확인해준다

Q2. 터널링 프로토콜에서 캡슐화 되면 내용물이 중요하지 않게 된다는게 무슨뜻인지 설명해주셨으면 합니다.

A. 오류가 있었습니다. 내용물이 중요하지 않게 된다느것 보다 프로토콜이 중요하지 않게 됩니다, 회사에서는 최신 버전의 인터넷 프로토콜(IP)인 IPv6 프로토콜을 사용하지만, 사무실 A와 사무실 B 사이에는 IPv4만 지원하는 네트워크가 있습니다. IPv6 패킷을 IPv4 패킷 안에 캡슐화함으로써 회사는 사무실 간에 직접 데이터를 전송하면서 IPv6을 계속 사용할 수 있습니다.

Q3 "DNS 패킷은 UDP 패킷이므로 세션이 존재하지 않아 먼저 도착한 패킷을 신뢰하며, 다음에 도착한 정보는 버린다."
라고 되어있는데 이 문제에 대응하는 해결책이 따로 있나요?

A. 몇몇 보안 업체들을 확인해 봤지만 이에 해당하는 해결책은 따로존재하지 않는것 같습니다.

Q4 DNS 가 'Domain Name System'이라고 하셨는데, 'Domain Name Space'와 같은 것인가요?

A. 아닙니다. Domain Name Space는 DNS의 구성요소중 하나입니다.

Q5 DNS 동작 원리에서, DNS 질의를 할 때 '사용자의 컴퓨터에 미리 설정되어 있는' 이 무슨 뜻인가요? 최상위 DNS 서버의 IP 주소에 해당하는 것이 없다면 그냥 404 에러를 반납하나요?

 A. 표현이 부적절 했습니다. Local DNS server(기지국 DNS 서버)에 저장되어 있는 IP를 받아온다는 것이 적절한 것 같습니다. 컴퓨터의 LAN선을 통해 인터넷이 연결되면 IP를 할당해주는 통신사의 DNS서버를 Local DNS Server라고 합니다.
 서버가 연결되지 않는 경우이기 때문에 404에러가 발생합니다.

Q6 터널링 프로토콜에서 '홉' 이 무엇인가요? 그리고 터널링 프로토콜이 이해가 잘 안 되는데, 이것도 공격의 일종인가요?

A. 터널링 프로토콜은 해당 네트워크에서 지원하지 않는 프로토콜을 사용하여 데이터를 전송하는 방법이다. 이를 통해 방화벽을 우회하도록 허용할 수 있다.
 홉이란 컴퓨터 네트워크에서 출발지와 목저지 사이에 위치한 경로의 한 부분이다.

Q7 스푸핑 공격을 할 때, 어떻게 중간에서 응답을 가로채는 건지 방법이 궁금합니다. 어떤 취약점을 이용하는 것인지?

A. 신뢰관계에 있는 시스템의 주소로 위장하여 접근합니다 즉 신뢰 관계의 IP로 접근하여 인증 및 로그인 없이 해당 서버에 접속하여 공격합니다.

Q8 ARP 스푸핑에서 호스트의 IP주소를 랜 카드의 하드웨어 주소로 변경할 수 있는 원리가 뭔가요?

A. ARP(Address Resolution Protocol) 주소 결정 프로토콜로 작동합니다. 이를테면, IP 호스트 A가 IP 호스트 B에게 IP 패킷을 전송하려고 할 때 IP 호스트 B의 물리적 네트워크 주소를 모른다면, ARP 프로토콜을 사용하여 목적지 IP 주소 B와 브로드캐스팅 물리적 네트워크 주소 FFFFFFFFFFFF를 가지는 ARP 패킷을 네트워크 상에 전송한다. IP 호스트 B는 자신의 IP 주소가 목적지에 있는 ARP 패킷을 수신하면 자신의 물리적 네트워크 주소를 A에게 응답한다.
